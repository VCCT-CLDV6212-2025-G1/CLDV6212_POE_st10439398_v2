@*------------Start of file------------*@
@model CLDV6212_POE_st10439398.Models.OrderViewModel

@{
    ViewData["Title"] = "Create New Order";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        <i class="fas fa-shopping-cart"></i> Create New Order
                    </h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="mb-3">
                            <label asp-for="CustomerId" class="form-label">Select Customer</label>
                            <select asp-for="CustomerId" class="form-control" required>
                                <option value="">-- Select a Customer --</option>
                                @foreach (var customer in Model.Customers)
                                {
                                    <option value="@customer.CustomerId">@customer.FullName (@customer.Email)</option>
                                }
                            </select>
                            <span asp-validation-for="CustomerId" class="text-danger"></span>
                            @if (!Model.Customers.Any())
                            {
                                <div class="form-text text-warning">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    No customers available. <a asp-controller="Customer" asp-action="Create">Create a customer first</a>.
                                </div>
                            }
                        </div>

                        <div class="mb-3">
                            <label asp-for="ProductId" class="form-label">Select Product</label>
                            <select asp-for="ProductId" class="form-control" required id="productSelect">
                                <option value="">-- Select a Product --</option>
                                @foreach (var product in Model.Products)
                                {
                                    <option value="@product.ProductId"
                                            data-price="@product.Price"
                                            data-stock="@product.StockQuantity"
                                            data-available="@product.IsAvailable">
                                        @product.Name (R @product.Price.ToString("N2")) - Stock: @product.StockQuantity
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                            @if (!Model.Products.Any())
                            {
                                <div class="form-text text-warning">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    No products available. <a asp-controller="Product" asp-action="Create">Create a product first</a>.
                                </div>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Quantity" class="form-label">Quantity</label>
                                    <input asp-for="Quantity" class="form-control" type="number" min="1" max="999" id="quantityInput" />
                                    <span asp-validation-for="Quantity" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Estimated Total</label>
                                    <div class="form-control bg-light" id="estimatedTotal">
                                        Select product and quantity
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="SpecialInstructions" class="form-label">Special Instructions</label>
                            <textarea asp-for="SpecialInstructions" class="form-control" rows="3"
                                      placeholder="Any special handling instructions or notes..."></textarea>
                            <span asp-validation-for="SpecialInstructions" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Orders
                            </a>
                            <button type="submit" class="btn btn-primary" id="submitBtn" disabled>
                                <i class="fas fa-plus"></i> Create Order
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            function updateEstimatedTotal() {
                var selectedProduct = $('#productSelect option:selected');
                var quantity = $('#quantityInput').val();
                var submitBtn = $('#submitBtn');

                if (selectedProduct.val() && quantity && quantity > 0) {
                    var price = parseFloat(selectedProduct.data('price'));
                    var stock = parseInt(selectedProduct.data('stock'));
                    var available = selectedProduct.data('available') === 'True';
                    var total = price * quantity;

                    $('#estimatedTotal').text('R ' + total.toFixed(2));

                    // Check availability and stock
                    if (!available) {
                        $('#estimatedTotal').html('<span class="text-danger">Product not available</span>');
                        submitBtn.prop('disabled', true);
                    } else if (quantity > stock) {
                        $('#estimatedTotal').html('<span class="text-warning">R ' + total.toFixed(2) + ' (Insufficient stock: ' + stock + ')</span>');
                        submitBtn.prop('disabled', true);
                    } else {
                        submitBtn.prop('disabled', false);
                    }
                } else {
                    $('#estimatedTotal').text('Select product and quantity');
                    submitBtn.prop('disabled', true);
                }
            }

            $('#productSelect, #quantityInput').change(updateEstimatedTotal);
            $('#quantityInput').keyup(updateEstimatedTotal);

            // Initial check
            updateEstimatedTotal();
        });
    </script>
}
@*------------End of file------------*@